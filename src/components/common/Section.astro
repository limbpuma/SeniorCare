---
type Props = {
  background?: keyof typeof backgroundClasses;
  class?: string;
  noContainer?: boolean;
  padingVertical: keyof typeof padingVerticalClasses;
  bgOpacity?: string;
};

const {
  class: className,
  background = "white",
  noContainer,
  padingVertical,
  ...props
} = Astro.props;

const padingVerticalClasses: { [key: string]: string } = {
  none: "py-0",
  xs: "py-0 lg:py-2",
  small: "py-2 lg:py-4",
  medium: "py-4 lg:py-8",
  large: "py-12 lg:py-20",
};

const padingHorizontalClasses: { [key: string]: string } = {};

const backgroundClasses = {
  white: "bg-white",
  primary: "bg-deep-blue",
  primaryLight: "bg-primary-light",
  accent: "bg-accent",
};

const classes = [
  backgroundClasses[background as keyof typeof backgroundClasses],
  className,
  padingVerticalClasses[padingVertical as keyof typeof padingVerticalClasses],
];
---

<section class:list={classes} {...props}>
  <div class={`px-3 md:px-0 ${noContainer ? " " : "container"}`}>
    <slot />
  </div>
</section>

<style>
  .container {
    --_width: 1700px;
    --_padingVertical: 1rem;

    width: min(var(--_width), 100% - (2 * var(--_padding)));
    margin-inline: auto;
  }
</style>
