---
type Props = {
  href?: string; 
  type?: "button" | "submit" | "reset";
  class?: string;
  variant?: 'primary' | 'secondary' | 'accent';
  size?: 'small' | 'medium' | 'large';
  fullWidth?: boolean;
  flex?: boolean
};

const { href, class: className, variant = 'primary', size = 'medium', fullWidth = false, flex,...props } = Astro.props;

const variantClasses = {
  primary: "text-white bg-deep-blue hover:bg-soft-blue focus:ring-2 focus:ring-offset-2 focus:ring-primary focus:outline-none",
  secondary: "text-deep-blue bg-white hover:bg-gray-blue focus:ring-2 focus:ring-offset-2 focus:ring-deep-blue focus:outline-none",
  accent: "text-deep-blue bg-accent hover:bg-soft-orange focus:ring-2 focus:ring-offset-2 focus:ring-accent focus:outline-none",
};

const sizeClasses = {
  small: "text-sm px-4 py-2",
  medium: "text-ag-button-text px-8 py-4",
  large: "text-lg px-12 py-6",
};

const fullWidthClass = fullWidth ? "w-full" : "max-w-fit";

const baseClasses = "rounded-full transition-colors duration-300 focus:outline-none";

const classes = [
  variantClasses[variant],
  sizeClasses[size],
  fullWidthClass,
  baseClasses,
  className,
];
---

<button class={classes.join(' ')} {...props}>
  <span class={`font-ag-button-text text-ag-button-text ${flex && 'flex'}`}>
    <slot />
  </span>
</button>
